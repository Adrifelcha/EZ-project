
model {
        ##### Priors for hierarchical DDM parameters
        betaweight ~ dnorm(0.00, 1.00)
        beta0 ~ dnorm(0.00, 1.00)
        beta1 ~ dnorm(0.00, 1.00)
        beta2 ~ dnorm(0.00, 1.00)
        beta3 ~ dnorm(0.00, 1.00)
        beta4 ~ dnorm(0.00, 1.00)
        bound_mean ~ dnorm(1.50, (0.20^-2))T( 0.10, 3.00)
        drift_mean ~ dnorm(0.50, (0.50^-2))
        nondt_mean ~ dnorm(0.30, (0.06^-2))T( 0, )
        bound_sdev ~ dunif(0.01, 1.00)
        drift_sdev ~ dunif(0.01, 3.00)
        nondt_sdev ~ dunif(0.01, 0.50)
        
        # Hierarchical distributions of individual DDM parameters.        
        for (p in 1:length(meanRT)) {
            # Here, drift rate is the criterion.
            drift_pred[p] = beta0*phi(beta1 + beta2*abs(Xs[p]) + beta3*Xi[p]*abs(Xs[p])) + beta4 * Xi[p] + drift_mean
            drift[p] ~ dnorm(drift_pred[p], (drift_sdev^-2))
            bound[p] ~ dnorm(bound_mean + betaweight * Xi[p],
                            (bound_sdev^-2))T( 0.10, 3.00)
            nondt[p] ~ dnorm(nondt_mean, (nondt_sdev^-2))
                                            T( 0.05, )
        
            # Forward equations from EZ DDM
            ey[p]  = exp(-bound[p] * drift[p])
            Pc[p]  = 1 / (1 + ey[p])
            PRT[p] = 2 * pow(drift[p], 3) / bound[p] * 
                     pow(ey[p] + 1, 2) / (2 * -bound[p] * 
                     drift[p] * ey[p] - ey[p] * ey[p] + 1)
            MDT[p] = (bound[p] / (2 * drift[p])) * 
                     (1 - ey[p]) / (1 + ey[p])
            MRT[p] = MDT[p] + nondt[p]
        
            # Sampling distributions for summary statistics
            correct[p] ~ dbin(Pc[p], nTrials[p])
            varRT[p]   ~ dnorm(1/PRT[p], 0.5*(correct[p]-1) 
                                         * PRT[p] * PRT[p])
            meanRT[p]  ~ dnorm(MRT[p], PRT[p] * correct[p])
      }
}
